/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ponto;

import Dao.conexãoDao;
import Dao.UsuarioDao;
import Dto.UsuarioDTO;
import com.microsoft.sqlserver.jdbc.SQLServerException;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.commons.mail.Email;
import org.apache.commons.mail.SimpleEmail;
import java.util.Properties;
import org.apache.commons.mail.EmailAttachment;
import org.apache.commons.mail.EmailException;
import org.apache.commons.mail.MultiPartEmail;
import javax.swing.*;
import com.google.cloud.storage.Blob;
import com.google.cloud.storage.BlobId;
import com.google.cloud.storage.BlobInfo;

/**
 *
 * @author tecnico.daniel
 */
public class Login extends javax.swing.JFrame {
   
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        setSize(460, 280);
        setResizable(false); // impede que a janela seja redimensionada ou maximizada
        setVisible(true);

        //acão para quando estiver no txtUsuario e clicar no enter ele loga
        jTextField1.addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    jButton1.doClick();
                }

            }
        });

//acão para quando estiver no txtsenha e apertar enter ele loga  
        jPasswordField1.addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    jButton1.doClick();
                }

            }
        });

        //acão para quando estiver no registrar e clicar no enter ele loga
        jButton1.addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    jButton1.doClick();
                }

            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 102, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Seu header");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addContainerGap(267, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(15, 15, 15))
        );

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("CPF:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Senha:");

        jButton1.setBackground(new java.awt.Color(0, 102, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("REGISTRAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("©By Daniel Vitório Augusto");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(jLabel2)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(3, 3, 3)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jLabel4)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            String nome_usuario = jTextField1.getText();
            String senha_usuario = String.valueOf(jPasswordField1.getPassword());

            LocalDate dataAtual = LocalDate.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            String dataFormatada = dataAtual.format(formatter);//formatando e registrando a data

            LocalDate data = LocalDate.now();
            int mes = data.getMonthValue();//apenas o mes
            int ano = data.getYear();//apenas o ano

            //puxando o nome do usuario
            LocalTime horaActual = LocalTime.now();
            String horas = horaActual.format(DateTimeFormatter.ofPattern("HH:mm:ss"));//formatando e registrando a hotas

            //conecção com is set DTO
            UsuarioDTO objusuariodto = new UsuarioDTO();
            objusuariodto.setNome_usuario(nome_usuario);
            objusuariodto.setSenha_usuario(senha_usuario);

            UsuarioDao objusuariodao = new UsuarioDao();
            ResultSet rsusuariodao = objusuariodao.autenticacaoUsuario(objusuariodto);

            //pegara o nome do usuario no db e vendo se a pasta com o nome existe
            if (rsusuariodao.next()) {
                try {
                    //criando a pasta
                    String caminho = "G:/Meu Drive/pontos/" + mes + "-" + ano; //( o certo seria puxar diretamnete de um banco de dados)
                    File pasta = new File(caminho);

                    if (!pasta.exists()) {
                        pasta.mkdir();
                        System.out.println("Pasta criada com sucesso!");
                        
                        //vai fazer a gravação dos topicos  da planila
                        
                       //gravando log
                    FileWriter arquivoLog = new FileWriter("c:\\seu local\\" + mes + "-" + ano + "\\" + nome_usuario + ".csv", true);//( o certo seria puxar o diretório diretamnete de um banco de dados)  aconselho deixar \\" + mes + "-" + ano + "\\" + nome_usuario + ".csv" e mudar apenas o diretório que serão salvos as planilhas de pontos
                    PrintWriter gravadorLog = new PrintWriter(arquivoLog);
                    gravadorLog.println("DATA; HORAS; REGISTRADO POR:");//informaçoes que serão guardadas no log quando aprovado

                    gravadorLog.close();
                    }
                    //gravando lo
                    FileWriter arquivoLog = new FileWriter("c:\\seu local\\" + mes + "-" + ano + "\\" + nome_usuario + ".csv", true);//( o certo seria puxar o diretório diretamnete de um banco de dados)  aconselho deixar \\" + mes + "-" + ano + "\\" + nome_usuario + ".csv" e mudar apenas o diretório que serão salvos as planilhas de pontos
                    PrintWriter gravadorLog = new PrintWriter(arquivoLog);
                    gravadorLog.println(dataFormatada + " ; " + horas + "; " + nome_usuario);//informaçoes que serão guardadas no log quando aprovado

                    gravadorLog.close();

                    //dialogo se gostaria de receber o comprovante:
                    int option = JOptionPane.showOptionDialog(null, "<html>"
                            + "Ponto registrado dia: <span style='color:blue;'>" + dataFormatada
                            + "</span> às: <span style='color:blue;'>" + horas
                            + "</span> "
                            + "<br>"
                            + "<br>"
                            + "<h3> Deseja receber seu comprovante por E-mail?</h3>"
                            + "<br> "
                            + "<html>", "Ponto registrado com sucesso!",
                            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new String[]{"Enviar", "Cancelar"}, "Enviar");

                    if (option == JOptionPane.YES_OPTION) { //se for enviar

                        //enviará um email de comprovante
                        String email = JOptionPane.showInputDialog(null, "<html><h3>Digite o email que deseja receber o comprovante:  </h3></html>", "Enviar Comprovante", JOptionPane.INFORMATION_MESSAGE);

                        if (email != null && !email.isEmpty()) {
                            String meuEmail = "seuemail";//email do destinatário ( o certo seria puxar diretamnete de um banco de dados)
                            String minhaSenha = "suasenha"; //senha do email( o certo seria puxar diretamnete de um banco de dados)

                            EmailAttachment attachment = new EmailAttachment();

                            //comentado caso resolva enviar anexo por email
                            // attachment.setPath("c:\\seu local\\" + mes + "-" + ano + "\\comprovantes\\" + nome_usuario + "\\" + dataFormatada + " - " + horas + ".txt");
                            // attachment.setDisposition(EmailAttachment.ATTACHMENT);
                            //  attachment.setDescription("Anexo");
                            //  attachment.setName("dataFormatada" + " - " + horas + ".txt");
                            try {

                                // Cria o objeto de e-mail multipart
                                
                                // aqui está um exemplo enviado por Gmail, aconselho mudar somente o host do seu email e a porta ou de acordo com o tipo de protocolo 
                                MultiPartEmail emailSender = new MultiPartEmail();
                                emailSender.setDebug(true);
                                emailSender.setHostName("smtp.gmail.com");
                                emailSender.setAuthentication(meuEmail, minhaSenha);
                                emailSender.setSSLOnConnect(true);
                                emailSender.setSmtpPort(465);
                                emailSender.addTo(email);
                                emailSender.setFrom(meuEmail);
                                
                                //aqui está o exemplo das mensagens que serão enviada contendo assunto e a mensagem que será encaminhada por email
                                emailSender.setSubject("Comprovante de batida de pontos dia: " + dataFormatada + "  - pontos");//assunto
                                emailSender.setMsg("Olá, Usuário: " + nome_usuario + "!\n \n Segue abaixo as informações de comprovação de batida de ponto: \n \n "
                                        + ""
                                        + "Comprovante de ponto do dia\n"
                                        + "" + dataFormatada + "\n"
                                        + "Nome da empresa\n"
                                        + "CNPJ: 00.00.000/0000-00\n"
                                        + "Registro INPI: 00000000000-00 \n \n"
                                        + ""
                                        + "Ponto registrado às:\n"
                                        + horas + "\n"
                                        + "Pelo usuário: " + nome_usuario
                                        + ""
                                        + "\n \n \n \n \n \n"
                                        + "Att: nome da empresa");//mensagem ( o certo seria puxar diretamnete de um banco de dados)

                                // caso queira enviar algum arquivo no email, ele uçtilizará o caminho que vc volocou na parte que esta comentada lá em cima para criação de arquivos
                                //emailSender.attach(attachment);
                                // Envia o e-mail
                                emailSender.send();

                                JOptionPane.showMessageDialog(null, "<html> <h3>Comprovante enviado para o E-mail: <h3><html>\n \n" + "<html> <span style='color:blue;'>" + email + "</span><html>", "E-mail enviado com sucesso!", JOptionPane.INFORMATION_MESSAGE); //mensagem de confirmação que o email foi enviado estilizado com css para ficar mais agradável
                            } catch (EmailException e) {
                                JOptionPane.showMessageDialog(null, "E-mail inválido! ");// + e.getMessage());

                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Você não digitou um e-mail!");

                        }//final do envio do email

                    } else {
                        this.dispose();
                    }

                } catch (IOException ex) {
                    ex.printStackTrace();
                }
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, " \u274C Usuário não cadastrado no sistema!", "Erro ao registrar o ponto", JOptionPane.INFORMATION_MESSAGE);

            }

        } catch (SQLServerException error) {
            JOptionPane.showMessageDialog(null, " Ponto. com erro no 'Login', erro:" + error);//mensagem de erros no arquivo
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here::
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
